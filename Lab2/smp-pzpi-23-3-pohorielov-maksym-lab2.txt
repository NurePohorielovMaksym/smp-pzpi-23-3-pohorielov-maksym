МІНІСТЕРСТВО НАУКИ І ОСВІТИ УКРАЇНИ


ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ










Кафедра «Програмна інженерія»








ЗВІТ
з лабораторної роботи №2
з дисципліни «Скриптові мови програмування»
на тему: «Продовольчий магазин "Весна"»












 
Виконав:                                                                         Прийняв:
ст. гр. ПЗПІ-23-3                                                            ст. викладач кафедри ПІ
Погорєлов М. І.                                                              Сокорчук Ігор Петрович


















Харків 2025
1 ІСТОРІЯ ЗМІН


№
	Дата
	Версія звіту
	Опис змін та виправлень
	1
	11.04.2025
	0.1
	Створено розділ «Завдання»
	2
	12.04.2025
	0.1
	Створено розділ «Опис Виконаної роботи»
	3
	13.04.2025
	0.1
	Створено розділ «Висновки»
	4
	14.04.2025
	0.1
	Створено розділ «Додаток А»
	5
	15.04.2025
	0.1
	Створено розділ «Додаток Б»
	6
	16.04.2025
	0.1
	Створено розділ «Додаток В»
	





























































2 ЗАВДАННЯ
Необхідно розробити консольний застосунок на мові PHP, який моделює роботу продовольчого магазину «Весна». Застосунок має надавати користувачу інтерактивний інтерфейс для вибору товарів, управління кошиком, перегляду підсумкового рахунку та налаштування профілю.
2.1 Основні вимоги до функціональності
2.1.1. Головне меню
Після запуску програма виводить у консоль головне меню з переліком доступних дій:
################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Користувач вводить число, що відповідає команді. Якщо введено некоректне значення (число, якого немає в меню), програма виводить повідомлення про помилку та повторно відображає меню:
ПОМИЛКА! Введіть правильну команду
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
2.1.2 Режим вибору товарів
При виборі пункту «1» програма переходить у режим закупівлі товарів і відображає список доступних продуктів у форматі:
№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: _
Користувач вводить номер товару. Якщо номер існує, програма запитує кількість товару:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: _
Якщо кількість більша за 0 і менша за 100, товар додається до кошика, після чого виводиться вміст кошика:
У КОШИКУ:
НАЗВА        КІЛЬКІСТЬ
Хліб чорний  1
Якщо введено кількість «0», товар видаляється з кошика:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 0
ВИДАЛЯЮ З КОШИКА
КОШИК ПОРОЖНІЙ
Якщо номер товару некоректний, виводиться повідомлення про помилку, і список товарів відображається повторно:
Виберіть товар: 8
ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ
Для повернення до головного меню користувач вводить «0».
2.1.3 Підсумковий рахунок
При виборі пункту «2» програма виводить підсумковий рахунок із інформацією про товари в кошику:
№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ
1  Печиво "Весна"        14    1          14
2  Молоко пастеризоване  12    2          24
3  Сметана 20%           25    1          25
4  Хліб чорний           9     1          9
РАЗОМ ДО CПЛАТИ: 72
Рахунок включає номер, назву товару, ціну за одиницю, кількість і загальну вартість кожного товару, а також загальну суму.
2.1.4 Налаштування профілю
При виборі пункту «3» програма запитує ім’я та вік користувача:
Ваше імʼя: _
Ваш вік: _
Ім’я не може бути порожнім і мусить містити хоча б одну літеру, вік має бути в межах від 7 до 150 років.
2.1.5 Вихід із програми
При виборі пункту «0» програма завершує роботу. Програма повинна перевіряти введені користувачем дані:
* Номер команди в головному меню має відповідати одному з доступних пунктів (0, 1, 2, 3).
* Номер товару має існувати в списку продуктів.
* Кількість товару повинна бути від 0 до 99.
* Ім’я користувача не може бути порожнім і має містити хоча б одну літеру.
* Вік користувача має бути в межах від 7 до 150 років.






































3 ОПИС ВИКОНАНОЇ РОБОТИ
3.1 Опис інженерних рішень
Для виконання завдання розроблено консольний застосунок на мові PHP, який моделює роботу продовольчого магазину «Весна». Застосунок дозволяє користувачу вибирати товари, керувати кошиком, переглядати підсумковий рахунок і налаштовувати профіль. Основна мета — забезпечити інтерактивний, зручний і надійний інтерфейс із перевіркою всіх введених даних.
Код організовано у вигляді окремих функцій для відображення меню, списку товарів, кошика, обробки вибору товарів, формування рахунку та налаштування профілю. Це забезпечує читабельність, легкість модифікації та повторне використання коду.
Використано асоціативний масив $products для зберігання списку товарів (номер, назва, ціна) та асоціативний масив $cart для збереження вибраних товарів і їхньої кількості. Такий підхід дозволяє швидко отримувати доступ до даних і оновлювати кошик.
Введення користувача зчитується за допомогою fgets(STDIN) із видаленням пробілів функцією trim(). Усі введені дані перевіряються: номери команд (0–3), номери товарів (1–7), кількість товарів (0–99), ім’я (наявність хоча б однієї літери) та вік (7–150 років). Некоректні дані викликають повідомлення про помилку та запит на повторне введення.
Для відображення таблиць (список товарів, кошик, рахунок) використано функцію printf, яка забезпечує вирівнювання стовпців і однаковий формат. Українські символи коректно відображаються завдяки UTF-8 кодуванню терміналу.
Застосунок включає комплексну перевірку введених даних, щоб запобігти збоям. Наприклад, якщо користувач вводить неіснуючий номер товару чи некоректну кількість, програма видає повідомлення про помилку та повертається до відповідного меню.
3.2 Розробка скрипта
3.2.1 Ініціалізація змінних
Скрипт починається з ініціалізації основних даних:
* Масив $products: Містить перелік товарів із номерами (1–7), назвами та цінами. Назви товарів форматовано з пробілами для вирівнювання в таблицях.
* Масив $cart: Ініціалізується як порожній асоціативний масив для зберігання вибраних товарів (ключ — номер товару, значення — кількість).
1  #!/usr/bin/env php
2  <?php
3  
4  $products = [
5      1 => ['name' => 'Молоко пастеризоване', 'price' => 12],
6      2 => ['name' => 'Хліб чорний         ', 'price' => 9],
7      3 => ['name' => 'Сир білий           ', 'price' => 21],
8      4 => ['name' => 'Сметана 20%         ', 'price' => 25],
9      5 => ['name' => 'Кефір 1%            ', 'price' => 19],
10     6 => ['name' => 'Вода газована       ', 'price' => 18],
11     7 => ['name' => 'Печиво "Весна"      ', 'price' => 14],
12 ];
13 $cart = [];
Фрагмент коду з основного сценарію, Додаток В.
3.2.2 Функція відображення головного меню
Функція displayMenu() відповідає за виведення головного меню магазину. Вона відображає заголовок із назвою магазину та перелік доступних команд (1 — вибрати товари, 2 — отримати рахунок, 3 — налаштувати профіль, 0 — вийти). Використовується echo для форматованого виведення, а в кінці виводиться запит на введення команди:
15 function displayMenu() {
16     echo "################################\n";
17     echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
18     echo "################################\n";
19     echo "1 Вибрати товари\n";
20     echo "2 Отримати підсумковий рахунок\n";
21     echo "3 Налаштувати свій профіль\n";
22     echo "0 Вийти з програми\n";
23     echo "Введіть команду: ";
24 }
Фрагмент коду з основного сценарію, Додаток В.
3.2.3 Функція відображення списку товарів
Функція displayProducts($products) виводить список доступних товарів у табличному форматі з номером, назвою та ціною. Використовується printf для вирівнювання стовпців, що забезпечує однаковий вигляд таблиці. В кінці додається опція «0 ПОВЕРНУТИСЯ» та запит на вибір товару:
26 function displayProducts($products) {
27     echo "\n";
28     echo "№  НАЗВА                 ЦІНА\n";
29     foreach ($products as $number => $product) {
30         printf("%-2d %-20s %5d\n", $number, $product['name'], $product['price']);
31     }
32     echo "   -----------\n";
33     echo "0  ПОВЕРНУТИСЯ\n";
34     echo "\n";
35     echo "Виберіть товар: ";
36 }
Фрагмент коду з основного сценарію, Додаток В.
3.2.4 Функція відображення кошика
Функція displayCart($cart, $products) показує вміст кошика. Якщо кошик порожній, виводиться повідомлення «КОШИК ПОРОЖНІЙ». Інакше відображається таблиця з назвами товарів і їхньою кількістю. Функція викликається після кожної зміни кошика для надання зворотного зв’язку:
38 function displayCart($cart, $products) {
39     echo "\n";
40     if (empty($cart)) {
41         echo "КОШИК ПОРОЖНІЙ\n";
42     } else {
43         echo "У КОШИКУ:\n";
44         echo "НАЗВА                 КІЛЬКІСТЬ\n";
45         foreach ($cart as $product_number => $quantity) {
46             echo $products[$product_number]['name'] . "  " . $quantity . "\n";
47         }
48     }
49     echo "\n";
50 }
Фрагмент коду з основного сценарію, Додаток В.
3.2.5 Функція вибору товарів
Перша частина функції відповідає за відображення списку товарів і обробку введеного номера товару. Вона використовує цикл while (true) для безперервного запиту введення, доки користувач не вибере коректний номер або не повернеться до меню. Функція викликає displayProducts($products) для виведення таблиці товарів із номерами, назвами та цінами. Введення зчитується через fgets(STDIN) і очищається від пробілів за допомогою trim(). Якщо введено «0», цикл переривається через break, сигналізуючи про повернення до головного меню. 
Якщо введення не є цілим числом (перевірка через ctype_digit) або номер не відповідає існуючому товару (перевірка через isset($products[(int)$input])), виводиться повідомлення про помилку «ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ», і цикл продовжується через continue. При коректному номері він конвертується в ціле число та зберігається для подальшої обробки:
53     while (true) {
54         displayProducts($products);
55         $input = trim(fgets(STDIN));
56         if ($input === '0') {
57             break;
58         }
59         if (!ctype_digit($input) || !isset($products[(int)$input])) {
60             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
61             continue;
62         }
Фрагмент коду з основного сценарію, Додаток В.
Друга частина функції обробляє введення кількості вибраного товару та оновлює кошик. Після отримання коректного номера товару ($product_number) виводиться його назва, і користувачу пропонується ввести кількість через fgets(STDIN). Введення перевіряється: воно має бути цілим числом (через ctype_digit), а кількість — у межах 0–99. Якщо введено не число, виводиться повідомлення «ПОМИЛКА! Кількість повинна бути цілим числом», і цикл продовжується. Якщо кількість ≥ 100, виводиться повідомлення «ПОМИЛКА! Кількість повинна бути від 0 до 99». 
Якщо кількість дорівнює 0 і товар є в кошику, він видаляється за допомогою unset($cart[$product_number]) із повідомленням «ВИДАЛЯЮ З КОШИКА». Для кількості від 1 до 99 товар додається до кошика ($cart[$product_number] = $quantity). Після кожної операції викликається displayCart($cart, $products) для відображення оновленого кошика. Цикл завершується додатковим порожнім рядком для форматування:
63         $product_number = (int)$input;
64         $product = $products[$product_number];
65         echo "Вибрано: " . $product['name'] . "\n";
66         echo "Введіть кількість, штук: ";
67         $quantity_input = trim(fgets(STDIN));
68         if (!ctype_digit($quantity_input)) {
69             echo "ПОМИЛКА! Кількість повинна бути цілим числом\n";
70             continue;
71         }
72         $quantity = (int)$quantity_input;
73         if ($quantity >= 100) {
74             echo "ПОМИЛКА! Кількість повинна бути від 0 до 99\n";
75             continue;
76         }
77         if ($quantity == 0) {
78             if (isset($cart[$product_number])) {
79                 unset($cart[$product_number]);
80                 echo "ВИДАЛЯЮ З КОШИКА\n";
81             }
82         } else {
83             $cart[$product_number] = $quantity;
84         }
85         displayCart($cart, $products);
86     }
87     echo "\n";
3.2.6 Функція формування рахунку
Функція displayBill($cart, $products) генерує підсумковий рахунок. Якщо кошик порожній, виводиться повідомлення з нульовою сумою. Інакше товари сортуються за номером (ksort), виводиться таблиця з номером, назвою, ціною, кількістю та вартістю кожного товару. Загальна сума обчислюється та відображається в кінці.
90 function displayBill($cart, $products) {
91     echo "\n";
92     if (empty($cart)) {
93         echo "КОШИК ПОРОЖНІЙ\n";
94         echo "РАЗОМ ДО CПЛАТИ: 0\n";
95         return;
96     }
97     echo "№  НАЗВА                  ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
98     ksort($cart);
99     $index = 1;
100    $total = 0;
101    foreach ($cart as $product_number => $quantity) {
102        $product = $products[$product_number];
103        $cost = $product['price'] * $quantity;
104        printf("%-2d %-20s %4d %5d %11d\n", $index, $product['name'], $product['price'], $quantity, $cost);
105        $index++;
106        $total += $cost;
107    }
108    echo "РАЗОМ ДО CПЛАТИ: " . $total . "\n";
109    echo "\n";
110 }
Фрагмент коду з основного сценарію, Додаток В.
3.2.7 Функція налаштування профілю
Функція setupProfile(&$name, &$age) запитує ім’я та вік користувача. Ім’я перевіряється регулярним виразом (preg_match) на наявність хоча б однієї літери (латиниця або кирилиця). Вік перевіряється на відповідність діапазону 7–150 років і має бути цілим числом. Некоректні дані викликають повторний запит.
112 function setupProfile(&$name, &$age) {
113     while (true) {
114         echo "Ваше імʼя: ";
115         $name = trim(fgets(STDIN));
116         if (preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄ]/u', $name)) {
117             break;
118         }
119         echo "ПОМИЛКА! Імʼя повинно містити хоча б одну літеру\n";
120     }
121     while (true) {
122         echo "Ваш вік: ";
123         $age_input = trim(fgets(STDIN));
124         if (ctype_digit($age_input)) {
125             $age = (int)$age_input;
126             if ($age >= 7 && $age <= 150) {
127                 break;
128             }
129             echo "ПОМИЛКА! Вік повинен бути від 7 до 150 років\n";
130         } else {
131             echo "ПОМИЛКА! Вік повинен бути цілим числом\n";
132         }
133     }
134 }
Фрагмент коду з основного сценарію, Додаток В.
3.2.8 Основний цикл програми
Основний цикл програми відображає меню, зчитує команду користувача та делегує виконання відповідним функціям. Команда перевіряється на валідність (ctype_digit, значення 0–3). Некоректні команди викликають повідомлення про помилку. Цикл завершується при виборі «0».
136 while (true) {
137     displayMenu();
138     $choice = trim(fgets(STDIN));
139     if (!ctype_digit($choice)) {
140         echo "ПОМИЛКА! Введіть правильну команду\n";
141         continue;
142     }
143     $choice = (int)$choice;
144     if ($choice == 0) {
145         break;
146     } elseif ($choice == 1) {
147         selectProducts($cart, $products);
148     } elseif ($choice == 2) {
149         displayBill($cart, $products);
150     } elseif ($choice == 3) {
151         $name = '';
152         $age = 0;
153         setupProfile($name, $age);
154     } else {
155         echo "ПОМИЛКА! Введіть правильну команду\n";
156     }
157 }
158 
159 ?>
Фрагмент коду з основного сценарію, Додаток В.
3.2.9 Результати роботи
Результати роботи знаходяться в Додатку Б.










4 ВИСНОВКИ
У результаті виконання лабораторної роботи було створено консольний застосунок «Продовольчий магазин "Весна"» на мові PHP, який моделює роботу магазину з функціями вибору товарів, управління кошиком, формування підсумкового рахунку та налаштування профілю користувача. Програма відповідає всім поставленим вимогам, забезпечуючи інтерактивний інтерфейс із чітким форматуванням виведення українською мовою та надійною валідацією введених даних.
Отримано навички використання PHP для розробки консольних застосунків, зокрема роботи зі стандартним вводом/виводом (fgets, echo, printf), обробки асоціативних масивів для зберігання даних, валідації введення за допомогою функцій ctype_digit і preg_match, а також форматування табличного виведення. Реалізоване програмне забезпечення має модульну структуру, що полегшує його підтримку та розширення. Функція selectProducts була успішно розбита на дві частини (selectProduct і processQuantity), що підвищило читабельність і модульність коду.
Застосунок коректно обробляє помилки, відображає чіткі повідомлення для користувача та забезпечує коректне відображення українських символів у терміналі з підтримкою UTF-8. Реалізоване програмне забезпечення повністю відповідає поставленим вимогам, забезпечуючи зручність використання та стабільність роботи.










ДОДАТОК А
Відеозапис
Відеозапис презентації результатів лабораторної роботи: 
https://youtu.be/6vPtMFVLIMA
00:00 - Вступ, ініціалізація змінних
00:20 -  Функція відображення головного меню
00:35 - Функція відображення списку товарів
01:15 - Функція відображення кошика
01:55 - Функція вибору товарів
02:40 - Функція формування рахунку
03:40 - Функція налаштування профілю
04:40 -  Основний цикл програми
05:00 -Демонстрація роботи
 




















ДОДАТОК Б
Графічні матеріали
  

Рис.1 - меню вибору функцій


  

Рис.2 - меню вибору товарів


  

Рис.3 - кошик


  

Рис.4 - підсумковий рахунок






  

Рис. 5 - валідація










































ДОДАТОК В 
Програмний код
Програмний код можна подивитись у GitHub репозиторії:
https://github.com/NurePohorielovMaksym/smp-pzpi-23-3-pohorielov-maksym/blob/main/Lab2/smp-pzpi-23-3-pohorielov-maksym-lab2/smp-pzpi-23-3-pohorielov-maksym-lab2-code
 1  #!/usr/bin/env php
 2  <?php
 3  
 4  $products = [
 5      1 => ['name' => 'Молоко пастеризоване', 'price' => 12],
 6      2 => ['name' => 'Хліб чорний         ', 'price' => 9],
 7      3 => ['name' => 'Сир білий           ', 'price' => 21],
 8      4 => ['name' => 'Сметана 20%         ', 'price' => 25],
 9      5 => ['name' => 'Кефір 1%            ', 'price' => 19],
10      6 => ['name' => 'Вода газована       ', 'price' => 18],
11      7 => ['name' => 'Печиво "Весна"      ', 'price' => 14],
12  ];
13  
14  $cart = [];
15  
16  function displayMenu() {
17      echo "################################\n";
18      echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
19      echo "################################\n";
20      echo "1 Вибрати товари\n";
21      echo "2 Отримати підсумковий рахунок\n";
22      echo "3 Налаштувати свій профіль\n";
23      echo "0 Вийти з програми\n";
24      echo "Введіть команду: ";
25  }
26  
27  function displayProducts($products) {
28      echo "\n";
29      echo "№  НАЗВА                 ЦІНА\n";
30      foreach ($products as $number => $product) {
31          printf("%-2d %-20s %5d\n", $number, $product['name'], $product['price']);
32      }
33      echo "   -----------\n";
34      echo "0  ПОВЕРНУТИСЯ\n";
35      echo "\n";
36      echo "Виберіть товар: ";
37  }
38  
39  function displayCart($cart, $products) {
40      echo "\n";
41      if (empty($cart)) {
42          echo "КОШИК ПОРОЖНІЙ\n";
43      } else {
44          echo "У КОШИКУ:\n";
45          echo "НАЗВА                 КІЛЬКІСТЬ\n";
46          foreach ($cart as $product_number => $quantity) {
47              echo $products[$product_number]['name'] . "  " . $quantity . "\n";
48          }
49      }
50      echo "\n";
51  }
52  
53  function selectProducts(&$cart, $products) {
54      while (true) {
55          displayProducts($products);
56          $input = trim(fgets(STDIN));
57          if ($input === '0') {
58              break;
59          }
60          if (!ctype_digit($input) || !isset($products[(int)$input])) {
61              echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
62              continue;
63          }
64          $product_number = (int)$input;
65          $product = $products[$product_number];
66          echo "Вибрано: " . $product['name'] . "\n";
67          echo "Введіть кількість, штук: ";
68          $quantity_input = trim(fgets(STDIN));
69          if (!ctype_digit($quantity_input)) {
70              echo "ПОМИЛКА! Кількість повинна бути цілим числом\n";
71              continue;
72          }
73          $quantity = (int)$quantity_input;
74          if ($quantity >= 100) {
75              echo "ПОМИЛКА! Кількість повинна бути від 0 до 99\n";
76              continue;
77          }
78          if ($quantity == 0) {
79              if (isset($cart[$product_number])) {
80                  unset($cart[$product_number]);
81                  echo "ВИДАЛЯЮ З КОШИКА\n";
82              }
83          } else {
84              $cart[$product_number] = $quantity;
85          }
86          displayCart($cart, $products);
87      }
88      echo "\n";
89  }
90  
91  function displayBill($cart, $products) {
92      echo "\n";
93      if (empty($cart)) {
94          echo "КОШИК ПОРОЖНІЙ\n";
95          echo "РАЗОМ ДО CПЛАТИ: 0\n";
96          return;
97      }
98      echo "№  НАЗВА                  ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
99      ksort($cart);
100     $index = 1;
101     $total = 0;
102     foreach ($cart as $product_number => $quantity) {
103         $product = $products[$product_number];
104         $cost = $product['price'] * $quantity;
105         printf("%-2d %-20s %4d %5d %11d\n", $index, $product['name'], $product['price'], $quantity, $cost);
106         $index++;
107         $total += $cost;
108     }
109     echo "РАЗОМ ДО CПЛАТИ: " . $total . "\n";
110     echo "\n";
111 }
112 
113 function setupProfile(&$name, &$age) {
114     while (true) {
115         echo "Ваше імʼя: ";
116         $name = trim(fgets(STDIN));
117         if (preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄ]/u', $name)) {
118             break;
119         }
120         echo "ПОМИЛКА! Імʼя повинно містити хоча б одну літеру\n";
121     }
122     while (true) {
123         echo "Ваш вік: ";
124         $age_input = trim(fgets(STDIN));
125         if (ctype_digit($age_input)) {
126             $age = (int)$age_input;
127             if ($age >= 7 && $age <= 150) {
128                 break;
129             }
130             echo "ПОМИЛКА! Вік повинен бути від 7 до 150 років\n";
131         } else {
132             echo "ПОМИЛКА! Вік повинен бути цілим числом\n";
133         }
134     }
135 }
136 
137 while (true) {
138     displayMenu();
139     $choice = trim(fgets(STDIN));
140     if (!ctype_digit($choice)) {
141         echo "ПОМИЛКА! Введіть правильну команду\n";
142         continue;
143     }
144     $choice = (int)$choice;
145     if ($choice == 0) {
146         break;
147     } elseif ($choice == 1) {
148         selectProducts($cart, $products);
149     } elseif ($choice == 2) {
150         displayBill($cart, $products);
151     } elseif ($choice == 3) {
152         $name = '';
153         $age = 0;
154         setupProfile($name, $age);
155     } else {
156         echo "ПОМИЛКА! Введіть правильну команду\n";
157     }
158 }
159 
160 ?>